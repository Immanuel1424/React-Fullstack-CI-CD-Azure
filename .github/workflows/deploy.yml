name: Deploy Fullstack App

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_USER: ubuntu
      PUBLIC_IP: ${{ secrets.PUBLIC_INSTANCE_IP }}
      PRIVATE_IP: ${{ secrets.PRIVATE_INSTANCE_IP }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add public instance to known_hosts
      run: ssh-keyscan -H ${{ env.PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Install backend dependencies
      working-directory: ./server
      run: npm install

    - name: Install frontend dependencies and build
      working-directory: ./client
      run: |
        npm install ajv@6 ajv-keywords@3 --legacy-peer-deps
        npm install --legacy-peer-deps
        npm run build

    - name: Archive project
      run: tar czf fullstack.tar.gz -C . server client

    - name: Copy project to private instance via public jump host
      run: |
        scp -o ProxyJump=${{ env.SSH_USER }}@${{ env.PUBLIC_IP }} -o StrictHostKeyChecking=no fullstack.tar.gz ${{ env.SSH_USER }}@${{ env.PRIVATE_IP }}:/tmp/

    - name: Deploy on private EC2
      run: |
        ssh -o ProxyJump=${{ env.SSH_USER }}@${{ env.PUBLIC_IP }} -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.PRIVATE_IP }} << 'EOF'
          sudo rm -rf /opt/fullstack
          sudo mkdir -p /opt/fullstack
          sudo tar xzf /tmp/fullstack.tar.gz -C /opt/fullstack
          cd /opt/fullstack/server && npm install --legacy-peer-deps
          cd /opt/fullstack/client && npm install ajv@6 ajv-keywords@3 --legacy-peer-deps && npm install --legacy-peer-deps && npm run build
          sudo systemctl restart backend
          sudo systemctl restart frontend
        EOF
