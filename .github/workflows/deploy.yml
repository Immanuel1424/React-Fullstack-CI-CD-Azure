name: Fullstack App CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_IP: ${{ secrets.PUBLIC_INSTANCE_IP }}
      SSH_USER: ubuntu

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install and Build Frontend
      run: |
        cd client
        npm install --legacy-peer-deps --no-audit
        npm run build
        cd ..

    - name: Compress App Files
      run: |
        tar czf fullstack.tar.gz server client

    - name: Prepare SSH Key
      run: |
        echo "${{ secrets.SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Upload Archive to EC2 Instance
      run: |
        scp -o StrictHostKeyChecking=no -i key.pem fullstack.tar.gz $SSH_USER@$EC2_IP:/home/$SSH_USER/

    - name: Remote Deploy on EC2 Instance
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$EC2_IP << 'EOF'
          sudo systemctl stop backend.service frontend.service || true
          rm -rf /opt/fullstack
          mkdir -p /opt/fullstack
          tar xzf /home/$USER/fullstack.tar.gz -C /opt/fullstack --strip-components=1

          cd /opt/fullstack/server
          npm install --legacy-peer-deps --no-audit

          cd /opt/fullstack/client
          npm install --legacy-peer-deps --no-audit
          npm run build

          sudo systemctl daemon-reload
          sudo systemctl restart backend.service frontend.service
        EOF

