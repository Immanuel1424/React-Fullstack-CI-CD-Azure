name: Deploy Fullstack App

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add public and private instance to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.PUBLIC_INSTANCE_IP }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.PRIVATE_INSTANCE_IP }} >> ~/.ssh/known_hosts

    - name: Test SSH connection to public instance
      run: ssh -o StrictHostKeyChecking=yes ubuntu@${{ secrets.PUBLIC_INSTANCE_IP }} "echo '✅ Public instance connected!'"

    - name: Build and Package App
      run: tar czf fullstack.tar.gz -C . server client

    - name: Copy app to public instance
      run: scp fullstack.tar.gz ubuntu@${{ secrets.PUBLIC_INSTANCE_IP }}:/tmp/

    - name: SSH into public and deploy to private
      run: |
        ssh ubuntu@${{ secrets.PUBLIC_INSTANCE_IP }} <<'EOF'
          set -e
          echo "⚙️ Transferring package to private instance..."
          scp /tmp/fullstack.tar.gz ubuntu@${{ secrets.PRIVATE_INSTANCE_IP }}:/tmp/

          echo "🚀 Deploying on private instance..."
          ssh ubuntu@${{ secrets.PRIVATE_INSTANCE_IP }} <<'INNER'
            set -e
            sudo rm -rf /opt/fullstack
            sudo mkdir -p /opt/fullstack
            sudo chown -R $USER:$USER /opt/fullstack

            sudo tar xzf /tmp/fullstack.tar.gz -C /opt/fullstack

            cd /opt/fullstack/server
            npm ci --legacy-peer-deps

            cd /opt/fullstack/client
            npm install ajv@6 ajv-keywords@3 --legacy-peer-deps
            npm ci --legacy-peer-deps
            npm run build

            sudo systemctl restart backend
            sudo systemctl restart frontend
            echo "✅ Deployment completed at $(date)"
          INNER
        EOF
