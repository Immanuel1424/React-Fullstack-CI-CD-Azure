name: Deploy Fullstack App to EC2 via Bastion Host

on:
  push:
    branches: [ main ]

env:
  SSH_USER: fullstack
  PRIVATE_IP: ${{ secrets.PRIVATE_INSTANCE_IP }}
  PUBLIC_IP: ${{ secrets.PUBLIC_INSTANCE_IP }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install and Build Frontend (React)
      run: |
        cd client
        rm -rf node_modules package-lock.json
        npm install ajv@6 ajv-keywords@3 --save-exact
        npm install --legacy-peer-deps --no-audit
        npm run build
        cd ..

    - name: Install Backend Dependencies (Node.js)
      run: |
        cd server
        npm install --legacy-peer-deps
        cd ..

    - name: Compress App Files
      run: |
        tar czf fullstack.tar.gz server client

    - name: Copy app to EC2 via Bastion Host
      run: |
        scp -o ProxyJump=${{ env.SSH_USER }}@${{ env.PUBLIC_IP }} -o StrictHostKeyChecking=no fullstack.tar.gz ${{ env.SSH_USER }}@${{ env.PRIVATE_IP }}:/tmp/

    - name: Deploy on Private EC2
      run: |
        ssh -o ProxyJump=${{ env.SSH_USER }}@${{ env.PUBLIC_IP }} -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.PRIVATE_IP }} << 'EOF'
          mkdir -p /opt/fullstack
          tar xzf /tmp/fullstack.tar.gz -C /opt/fullstack --overwrite
          cd /opt/fullstack/server
          npm install --legacy-peer-deps
          sudo systemctl restart fullstack-backend
          cd /opt/fullstack/client
          npm install ajv@6 ajv-keywords@3 --save-exact
          npm install --legacy-peer-deps
          npm run build
          sudo systemctl restart fullstack-frontend
        EOF
