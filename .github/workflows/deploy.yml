name: Deploy Fullstack App via Bastion

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_USER: ubuntu
      PUBLIC_IP: ${{ secrets.PUBLIC_INSTANCE_IP }}
      PRIVATE_IP: ${{ secrets.PRIVATE_INSTANCE_IP }}
      BASTION_KEY: ${{ secrets.SSH_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "$BASTION_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts
        ssh-keyscan -H $PRIVATE_IP >> ~/.ssh/known_hosts

    - name: Archive app
      run: |
        tar czf fullstack.tar.gz -C . server client

    - name: Copy tar to private EC2 via bastion
      run: |
        scp -o ProxyJump=$SSH_USER@$PUBLIC_IP -o StrictHostKeyChecking=no fullstack.tar.gz $SSH_USER@$PRIVATE_IP:/tmp/

    - name: Deploy to private EC2
      run: |
        ssh -o ProxyJump=$SSH_USER@$PUBLIC_IP -o StrictHostKeyChecking=no $SSH_USER@$PRIVATE_IP << 'EOF'
          set -e
          sudo rm -rf /opt/fullstack
          sudo mkdir -p /opt/fullstack
          sudo tar xzf /tmp/fullstack.tar.gz -C /opt/fullstack
          cd /opt/fullstack/server
          npm install --legacy-peer-deps
          cd /opt/fullstack/client
          npm install ajv@6 ajv-keywords@3 --legacy-peer-deps
          npm install --legacy-peer-deps
          npm run build
          sudo systemctl restart backend
          sudo systemctl restart frontend
        EOF
